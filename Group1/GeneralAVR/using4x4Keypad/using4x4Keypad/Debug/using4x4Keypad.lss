
using4x4Keypad.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004d6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000056  00800060  000004d6  0000056a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000018  008000b6  008000b6  000005c0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005c0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005f0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  0000062c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001f82  00000000  00000000  00000704  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000971  00000000  00000000  00002686  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b73  00000000  00000000  00002ff7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000304  00000000  00000000  00003b6c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000795  00000000  00000000  00003e70  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001110  00000000  00000000  00004605  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00005715  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2b 00 	jmp	0x56	; 0x56 <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   8:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  10:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  14:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  18:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  1c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  20:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  24:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  28:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  2c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  30:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  34:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  38:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  3c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  44:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  48:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  4c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  50:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>

00000054 <__ctors_start>:
  54:	5c 02       	muls	r21, r28

00000056 <__ctors_end>:
  56:	11 24       	eor	r1, r1
  58:	1f be       	out	0x3f, r1	; 63
  5a:	cf e5       	ldi	r28, 0x5F	; 95
  5c:	d4 e0       	ldi	r29, 0x04	; 4
  5e:	de bf       	out	0x3e, r29	; 62
  60:	cd bf       	out	0x3d, r28	; 61

00000062 <__do_copy_data>:
  62:	10 e0       	ldi	r17, 0x00	; 0
  64:	a0 e6       	ldi	r26, 0x60	; 96
  66:	b0 e0       	ldi	r27, 0x00	; 0
  68:	e6 ed       	ldi	r30, 0xD6	; 214
  6a:	f4 e0       	ldi	r31, 0x04	; 4
  6c:	02 c0       	rjmp	.+4      	; 0x72 <__do_copy_data+0x10>
  6e:	05 90       	lpm	r0, Z+
  70:	0d 92       	st	X+, r0
  72:	a6 3b       	cpi	r26, 0xB6	; 182
  74:	b1 07       	cpc	r27, r17
  76:	d9 f7       	brne	.-10     	; 0x6e <__do_copy_data+0xc>

00000078 <__do_clear_bss>:
  78:	20 e0       	ldi	r18, 0x00	; 0
  7a:	a6 eb       	ldi	r26, 0xB6	; 182
  7c:	b0 e0       	ldi	r27, 0x00	; 0
  7e:	01 c0       	rjmp	.+2      	; 0x82 <.do_clear_bss_start>

00000080 <.do_clear_bss_loop>:
  80:	1d 92       	st	X+, r1

00000082 <.do_clear_bss_start>:
  82:	ae 3c       	cpi	r26, 0xCE	; 206
  84:	b2 07       	cpc	r27, r18
  86:	e1 f7       	brne	.-8      	; 0x80 <.do_clear_bss_loop>

00000088 <__do_global_ctors>:
  88:	10 e0       	ldi	r17, 0x00	; 0
  8a:	cb e2       	ldi	r28, 0x2B	; 43
  8c:	d0 e0       	ldi	r29, 0x00	; 0
  8e:	04 c0       	rjmp	.+8      	; 0x98 <__do_global_ctors+0x10>
  90:	21 97       	sbiw	r28, 0x01	; 1
  92:	fe 01       	movw	r30, r28
  94:	0e 94 63 02 	call	0x4c6	; 0x4c6 <__tablejump2__>
  98:	ca 32       	cpi	r28, 0x2A	; 42
  9a:	d1 07       	cpc	r29, r17
  9c:	c9 f7       	brne	.-14     	; 0x90 <__do_global_ctors+0x8>
  9e:	0e 94 05 02 	call	0x40a	; 0x40a <main>
  a2:	0c 94 69 02 	jmp	0x4d2	; 0x4d2 <_exit>

000000a6 <__bad_interrupt>:
  a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000aa <_ZN3lcd11Lcd_RawSendEcc>:
   		
	  string [0] = hexCode [ (( Number >> 4) &  0x0F ) ];
	  string [1] = hexCode [ ( Number & 0x0F) ];
	  writeText(row, column, string);
	  
}
  aa:	44 23       	and	r20, r20
  ac:	11 f0       	breq	.+4      	; 0xb2 <_ZN3lcd11Lcd_RawSendEcc+0x8>
  ae:	dd 9a       	sbi	0x1b, 5	; 27
  b0:	01 c0       	rjmp	.+2      	; 0xb4 <_ZN3lcd11Lcd_RawSendEcc+0xa>
  b2:	dd 98       	cbi	0x1b, 5	; 27
  b4:	86 2f       	mov	r24, r22
  b6:	82 95       	swap	r24
  b8:	8f 70       	andi	r24, 0x0F	; 15
  ba:	80 ff       	sbrs	r24, 0
  bc:	02 c0       	rjmp	.+4      	; 0xc2 <_ZN3lcd11Lcd_RawSendEcc+0x18>
  be:	d8 9a       	sbi	0x1b, 0	; 27
  c0:	01 c0       	rjmp	.+2      	; 0xc4 <_ZN3lcd11Lcd_RawSendEcc+0x1a>
  c2:	d8 98       	cbi	0x1b, 0	; 27
  c4:	81 ff       	sbrs	r24, 1
  c6:	02 c0       	rjmp	.+4      	; 0xcc <_ZN3lcd11Lcd_RawSendEcc+0x22>
  c8:	d9 9a       	sbi	0x1b, 1	; 27
  ca:	01 c0       	rjmp	.+2      	; 0xce <_ZN3lcd11Lcd_RawSendEcc+0x24>
  cc:	d9 98       	cbi	0x1b, 1	; 27
  ce:	82 ff       	sbrs	r24, 2
  d0:	02 c0       	rjmp	.+4      	; 0xd6 <_ZN3lcd11Lcd_RawSendEcc+0x2c>
  d2:	da 9a       	sbi	0x1b, 2	; 27
  d4:	01 c0       	rjmp	.+2      	; 0xd8 <_ZN3lcd11Lcd_RawSendEcc+0x2e>
  d6:	da 98       	cbi	0x1b, 2	; 27
  d8:	88 70       	andi	r24, 0x08	; 8
  da:	11 f0       	breq	.+4      	; 0xe0 <_ZN3lcd11Lcd_RawSendEcc+0x36>
  dc:	db 9a       	sbi	0x1b, 3	; 27
  de:	01 c0       	rjmp	.+2      	; 0xe2 <_ZN3lcd11Lcd_RawSendEcc+0x38>
  e0:	db 98       	cbi	0x1b, 3	; 27
  e2:	dc 98       	cbi	0x1b, 4	; 27
  e4:	84 e0       	ldi	r24, 0x04	; 4
  e6:	8a 95       	dec	r24
  e8:	f1 f7       	brne	.-4      	; 0xe6 <_ZN3lcd11Lcd_RawSendEcc+0x3c>
  ea:	dc 9a       	sbi	0x1b, 4	; 27
  ec:	94 e0       	ldi	r25, 0x04	; 4
  ee:	9a 95       	dec	r25
  f0:	f1 f7       	brne	.-4      	; 0xee <_ZN3lcd11Lcd_RawSendEcc+0x44>
  f2:	dc 98       	cbi	0x1b, 4	; 27
  f4:	8b e2       	ldi	r24, 0x2B	; 43
  f6:	91 e0       	ldi	r25, 0x01	; 1
  f8:	01 97       	sbiw	r24, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <_ZN3lcd11Lcd_RawSendEcc+0x4e>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <_ZN3lcd11Lcd_RawSendEcc+0x54>
  fe:	00 00       	nop
 100:	44 23       	and	r20, r20
 102:	11 f0       	breq	.+4      	; 0x108 <_ZN3lcd11Lcd_RawSendEcc+0x5e>
 104:	dd 9a       	sbi	0x1b, 5	; 27
 106:	01 c0       	rjmp	.+2      	; 0x10a <_ZN3lcd11Lcd_RawSendEcc+0x60>
 108:	dd 98       	cbi	0x1b, 5	; 27
 10a:	60 ff       	sbrs	r22, 0
 10c:	02 c0       	rjmp	.+4      	; 0x112 <_ZN3lcd11Lcd_RawSendEcc+0x68>
 10e:	d8 9a       	sbi	0x1b, 0	; 27
 110:	01 c0       	rjmp	.+2      	; 0x114 <_ZN3lcd11Lcd_RawSendEcc+0x6a>
 112:	d8 98       	cbi	0x1b, 0	; 27
 114:	61 ff       	sbrs	r22, 1
 116:	02 c0       	rjmp	.+4      	; 0x11c <_ZN3lcd11Lcd_RawSendEcc+0x72>
 118:	d9 9a       	sbi	0x1b, 1	; 27
 11a:	01 c0       	rjmp	.+2      	; 0x11e <_ZN3lcd11Lcd_RawSendEcc+0x74>
 11c:	d9 98       	cbi	0x1b, 1	; 27
 11e:	62 ff       	sbrs	r22, 2
 120:	02 c0       	rjmp	.+4      	; 0x126 <_ZN3lcd11Lcd_RawSendEcc+0x7c>
 122:	da 9a       	sbi	0x1b, 2	; 27
 124:	01 c0       	rjmp	.+2      	; 0x128 <_ZN3lcd11Lcd_RawSendEcc+0x7e>
 126:	da 98       	cbi	0x1b, 2	; 27
 128:	63 ff       	sbrs	r22, 3
 12a:	02 c0       	rjmp	.+4      	; 0x130 <_ZN3lcd11Lcd_RawSendEcc+0x86>
 12c:	db 9a       	sbi	0x1b, 3	; 27
 12e:	01 c0       	rjmp	.+2      	; 0x132 <_ZN3lcd11Lcd_RawSendEcc+0x88>
 130:	db 98       	cbi	0x1b, 3	; 27
 132:	dc 98       	cbi	0x1b, 4	; 27
 134:	94 e0       	ldi	r25, 0x04	; 4
 136:	9a 95       	dec	r25
 138:	f1 f7       	brne	.-4      	; 0x136 <_ZN3lcd11Lcd_RawSendEcc+0x8c>
 13a:	dc 9a       	sbi	0x1b, 4	; 27
 13c:	84 e0       	ldi	r24, 0x04	; 4
 13e:	8a 95       	dec	r24
 140:	f1 f7       	brne	.-4      	; 0x13e <_ZN3lcd11Lcd_RawSendEcc+0x94>
 142:	dc 98       	cbi	0x1b, 4	; 27
 144:	8b e2       	ldi	r24, 0x2B	; 43
 146:	91 e0       	ldi	r25, 0x01	; 1
 148:	01 97       	sbiw	r24, 0x01	; 1
 14a:	f1 f7       	brne	.-4      	; 0x148 <_ZN3lcd11Lcd_RawSendEcc+0x9e>
 14c:	00 c0       	rjmp	.+0      	; 0x14e <_ZN3lcd11Lcd_RawSendEcc+0xa4>
 14e:	00 00       	nop
 150:	08 95       	ret

00000152 <_ZN3lcd4initEv>:
 152:	cf 93       	push	r28
 154:	df 93       	push	r29
 156:	ec 01       	movw	r28, r24
 158:	88 81       	ld	r24, Y
 15a:	9f ef       	ldi	r25, 0xFF	; 255
 15c:	98 0f       	add	r25, r24
 15e:	92 30       	cpi	r25, 0x02	; 2
 160:	38 f0       	brcs	.+14     	; 0x170 <_ZN3lcd4initEv+0x1e>
 162:	84 30       	cpi	r24, 0x04	; 4
 164:	29 f0       	breq	.+10     	; 0x170 <_ZN3lcd4initEv+0x1e>
 166:	82 e0       	ldi	r24, 0x02	; 2
 168:	88 83       	st	Y, r24
 16a:	80 e1       	ldi	r24, 0x10	; 16
 16c:	89 83       	std	Y+1, r24	; 0x01
 16e:	08 c0       	rjmp	.+16     	; 0x180 <_ZN3lcd4initEv+0x2e>
 170:	89 81       	ldd	r24, Y+1	; 0x01
 172:	8b 7f       	andi	r24, 0xFB	; 251
 174:	80 31       	cpi	r24, 0x10	; 16
 176:	21 f0       	breq	.+8      	; 0x180 <_ZN3lcd4initEv+0x2e>
 178:	82 e0       	ldi	r24, 0x02	; 2
 17a:	88 83       	st	Y, r24
 17c:	80 e1       	ldi	r24, 0x10	; 16
 17e:	89 83       	std	Y+1, r24	; 0x01
 180:	d4 9a       	sbi	0x1a, 4	; 26
 182:	d5 9a       	sbi	0x1a, 5	; 26
 184:	d0 9a       	sbi	0x1a, 0	; 26
 186:	d1 9a       	sbi	0x1a, 1	; 26
 188:	d2 9a       	sbi	0x1a, 2	; 26
 18a:	d3 9a       	sbi	0x1a, 3	; 26
 18c:	8f e9       	ldi	r24, 0x9F	; 159
 18e:	9c e8       	ldi	r25, 0x8C	; 140
 190:	01 97       	sbiw	r24, 0x01	; 1
 192:	f1 f7       	brne	.-4      	; 0x190 <_ZN3lcd4initEv+0x3e>
 194:	00 c0       	rjmp	.+0      	; 0x196 <_ZN3lcd4initEv+0x44>
 196:	00 00       	nop
 198:	40 e0       	ldi	r20, 0x00	; 0
 19a:	63 e3       	ldi	r22, 0x33	; 51
 19c:	ce 01       	movw	r24, r28
 19e:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN3lcd11Lcd_RawSendEcc>
 1a2:	8f e6       	ldi	r24, 0x6F	; 111
 1a4:	97 e1       	ldi	r25, 0x17	; 23
 1a6:	01 97       	sbiw	r24, 0x01	; 1
 1a8:	f1 f7       	brne	.-4      	; 0x1a6 <_ZN3lcd4initEv+0x54>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <_ZN3lcd4initEv+0x5a>
 1ac:	00 00       	nop
 1ae:	40 e0       	ldi	r20, 0x00	; 0
 1b0:	63 e3       	ldi	r22, 0x33	; 51
 1b2:	ce 01       	movw	r24, r28
 1b4:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN3lcd11Lcd_RawSendEcc>
 1b8:	8f e6       	ldi	r24, 0x6F	; 111
 1ba:	97 e1       	ldi	r25, 0x17	; 23
 1bc:	01 97       	sbiw	r24, 0x01	; 1
 1be:	f1 f7       	brne	.-4      	; 0x1bc <_ZN3lcd4initEv+0x6a>
 1c0:	00 c0       	rjmp	.+0      	; 0x1c2 <_ZN3lcd4initEv+0x70>
 1c2:	00 00       	nop
 1c4:	40 e0       	ldi	r20, 0x00	; 0
 1c6:	63 e3       	ldi	r22, 0x33	; 51
 1c8:	ce 01       	movw	r24, r28
 1ca:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN3lcd11Lcd_RawSendEcc>
 1ce:	8f e6       	ldi	r24, 0x6F	; 111
 1d0:	97 e1       	ldi	r25, 0x17	; 23
 1d2:	01 97       	sbiw	r24, 0x01	; 1
 1d4:	f1 f7       	brne	.-4      	; 0x1d2 <_ZN3lcd4initEv+0x80>
 1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <_ZN3lcd4initEv+0x86>
 1d8:	00 00       	nop
 1da:	40 e0       	ldi	r20, 0x00	; 0
 1dc:	62 e3       	ldi	r22, 0x32	; 50
 1de:	ce 01       	movw	r24, r28
 1e0:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN3lcd11Lcd_RawSendEcc>
 1e4:	8f e6       	ldi	r24, 0x6F	; 111
 1e6:	97 e1       	ldi	r25, 0x17	; 23
 1e8:	01 97       	sbiw	r24, 0x01	; 1
 1ea:	f1 f7       	brne	.-4      	; 0x1e8 <_ZN3lcd4initEv+0x96>
 1ec:	00 c0       	rjmp	.+0      	; 0x1ee <_ZN3lcd4initEv+0x9c>
 1ee:	00 00       	nop
 1f0:	40 e0       	ldi	r20, 0x00	; 0
 1f2:	68 e2       	ldi	r22, 0x28	; 40
 1f4:	ce 01       	movw	r24, r28
 1f6:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN3lcd11Lcd_RawSendEcc>
 1fa:	8f e6       	ldi	r24, 0x6F	; 111
 1fc:	97 e1       	ldi	r25, 0x17	; 23
 1fe:	01 97       	sbiw	r24, 0x01	; 1
 200:	f1 f7       	brne	.-4      	; 0x1fe <_ZN3lcd4initEv+0xac>
 202:	00 c0       	rjmp	.+0      	; 0x204 <_ZN3lcd4initEv+0xb2>
 204:	00 00       	nop
 206:	40 e0       	ldi	r20, 0x00	; 0
 208:	66 e0       	ldi	r22, 0x06	; 6
 20a:	ce 01       	movw	r24, r28
 20c:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN3lcd11Lcd_RawSendEcc>
 210:	8f e6       	ldi	r24, 0x6F	; 111
 212:	97 e1       	ldi	r25, 0x17	; 23
 214:	01 97       	sbiw	r24, 0x01	; 1
 216:	f1 f7       	brne	.-4      	; 0x214 <_ZN3lcd4initEv+0xc2>
 218:	00 c0       	rjmp	.+0      	; 0x21a <_ZN3lcd4initEv+0xc8>
 21a:	00 00       	nop
 21c:	40 e0       	ldi	r20, 0x00	; 0
 21e:	6c e0       	ldi	r22, 0x0C	; 12
 220:	ce 01       	movw	r24, r28
 222:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN3lcd11Lcd_RawSendEcc>
 226:	8f e6       	ldi	r24, 0x6F	; 111
 228:	97 e1       	ldi	r25, 0x17	; 23
 22a:	01 97       	sbiw	r24, 0x01	; 1
 22c:	f1 f7       	brne	.-4      	; 0x22a <_ZN3lcd4initEv+0xd8>
 22e:	00 c0       	rjmp	.+0      	; 0x230 <_ZN3lcd4initEv+0xde>
 230:	00 00       	nop
 232:	40 e0       	ldi	r20, 0x00	; 0
 234:	61 e0       	ldi	r22, 0x01	; 1
 236:	ce 01       	movw	r24, r28
 238:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN3lcd11Lcd_RawSendEcc>
 23c:	8f e6       	ldi	r24, 0x6F	; 111
 23e:	97 e1       	ldi	r25, 0x17	; 23
 240:	01 97       	sbiw	r24, 0x01	; 1
 242:	f1 f7       	brne	.-4      	; 0x240 <_ZN3lcd4initEv+0xee>
 244:	00 c0       	rjmp	.+0      	; 0x246 <_ZN3lcd4initEv+0xf4>
 246:	00 00       	nop
 248:	40 e0       	ldi	r20, 0x00	; 0
 24a:	62 e0       	ldi	r22, 0x02	; 2
 24c:	ce 01       	movw	r24, r28
 24e:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN3lcd11Lcd_RawSendEcc>
 252:	8f e6       	ldi	r24, 0x6F	; 111
 254:	97 e1       	ldi	r25, 0x17	; 23
 256:	01 97       	sbiw	r24, 0x01	; 1
 258:	f1 f7       	brne	.-4      	; 0x256 <_ZN3lcd4initEv+0x104>
 25a:	00 c0       	rjmp	.+0      	; 0x25c <_ZN3lcd4initEv+0x10a>
 25c:	00 00       	nop
 25e:	df 91       	pop	r29
 260:	cf 91       	pop	r28
 262:	08 95       	ret

00000264 <_ZN3lcd5clearEv>:
 264:	cf 93       	push	r28
 266:	df 93       	push	r29
 268:	ec 01       	movw	r28, r24
 26a:	40 e0       	ldi	r20, 0x00	; 0
 26c:	61 e0       	ldi	r22, 0x01	; 1
 26e:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN3lcd11Lcd_RawSendEcc>
 272:	8f e6       	ldi	r24, 0x6F	; 111
 274:	97 e1       	ldi	r25, 0x17	; 23
 276:	01 97       	sbiw	r24, 0x01	; 1
 278:	f1 f7       	brne	.-4      	; 0x276 <_ZN3lcd5clearEv+0x12>
 27a:	00 c0       	rjmp	.+0      	; 0x27c <_ZN3lcd5clearEv+0x18>
 27c:	00 00       	nop
 27e:	40 e0       	ldi	r20, 0x00	; 0
 280:	62 e0       	ldi	r22, 0x02	; 2
 282:	ce 01       	movw	r24, r28
 284:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN3lcd11Lcd_RawSendEcc>
 288:	8f e6       	ldi	r24, 0x6F	; 111
 28a:	97 e1       	ldi	r25, 0x17	; 23
 28c:	01 97       	sbiw	r24, 0x01	; 1
 28e:	f1 f7       	brne	.-4      	; 0x28c <_ZN3lcd5clearEv+0x28>
 290:	00 c0       	rjmp	.+0      	; 0x292 <_ZN3lcd5clearEv+0x2e>
 292:	00 00       	nop
 294:	df 91       	pop	r29
 296:	cf 91       	pop	r28
 298:	08 95       	ret

0000029a <_ZN3lcd10Lcd_CursorEcc>:
 29a:	fc 01       	movw	r30, r24
 29c:	20 81       	ld	r18, Z
 29e:	21 30       	cpi	r18, 0x01	; 1
 2a0:	a1 f0       	breq	.+40     	; 0x2ca <_ZN3lcd10Lcd_CursorEcc+0x30>
 2a2:	22 30       	cpi	r18, 0x02	; 2
 2a4:	21 f4       	brne	.+8      	; 0x2ae <_ZN3lcd10Lcd_CursorEcc+0x14>
 2a6:	66 23       	and	r22, r22
 2a8:	21 f1       	breq	.+72     	; 0x2f2 <_ZN3lcd10Lcd_CursorEcc+0x58>
 2aa:	60 ec       	ldi	r22, 0xC0	; 192
 2ac:	17 c0       	rjmp	.+46     	; 0x2dc <_ZN3lcd10Lcd_CursorEcc+0x42>
 2ae:	24 30       	cpi	r18, 0x04	; 4
 2b0:	a9 f4       	brne	.+42     	; 0x2dc <_ZN3lcd10Lcd_CursorEcc+0x42>
 2b2:	fc 01       	movw	r30, r24
 2b4:	21 81       	ldd	r18, Z+1	; 0x01
 2b6:	20 31       	cpi	r18, 0x10	; 16
 2b8:	51 f0       	breq	.+20     	; 0x2ce <_ZN3lcd10Lcd_CursorEcc+0x34>
 2ba:	66 23       	and	r22, r22
 2bc:	51 f0       	breq	.+20     	; 0x2d2 <_ZN3lcd10Lcd_CursorEcc+0x38>
 2be:	61 30       	cpi	r22, 0x01	; 1
 2c0:	51 f0       	breq	.+20     	; 0x2d6 <_ZN3lcd10Lcd_CursorEcc+0x3c>
 2c2:	62 30       	cpi	r22, 0x02	; 2
 2c4:	51 f0       	breq	.+20     	; 0x2da <_ZN3lcd10Lcd_CursorEcc+0x40>
 2c6:	64 ed       	ldi	r22, 0xD4	; 212
 2c8:	09 c0       	rjmp	.+18     	; 0x2dc <_ZN3lcd10Lcd_CursorEcc+0x42>
 2ca:	60 e8       	ldi	r22, 0x80	; 128
 2cc:	07 c0       	rjmp	.+14     	; 0x2dc <_ZN3lcd10Lcd_CursorEcc+0x42>
 2ce:	64 ed       	ldi	r22, 0xD4	; 212
 2d0:	05 c0       	rjmp	.+10     	; 0x2dc <_ZN3lcd10Lcd_CursorEcc+0x42>
 2d2:	60 e8       	ldi	r22, 0x80	; 128
 2d4:	03 c0       	rjmp	.+6      	; 0x2dc <_ZN3lcd10Lcd_CursorEcc+0x42>
 2d6:	60 ec       	ldi	r22, 0xC0	; 192
 2d8:	01 c0       	rjmp	.+2      	; 0x2dc <_ZN3lcd10Lcd_CursorEcc+0x42>
 2da:	64 e9       	ldi	r22, 0x94	; 148
 2dc:	64 0f       	add	r22, r20
 2de:	40 e0       	ldi	r20, 0x00	; 0
 2e0:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN3lcd11Lcd_RawSendEcc>
 2e4:	8f e6       	ldi	r24, 0x6F	; 111
 2e6:	97 e1       	ldi	r25, 0x17	; 23
 2e8:	01 97       	sbiw	r24, 0x01	; 1
 2ea:	f1 f7       	brne	.-4      	; 0x2e8 <_ZN3lcd10Lcd_CursorEcc+0x4e>
 2ec:	00 c0       	rjmp	.+0      	; 0x2ee <_ZN3lcd10Lcd_CursorEcc+0x54>
 2ee:	00 00       	nop
 2f0:	08 95       	ret
 2f2:	60 e8       	ldi	r22, 0x80	; 128
 2f4:	f3 cf       	rjmp	.-26     	; 0x2dc <_ZN3lcd10Lcd_CursorEcc+0x42>

000002f6 <_ZN3lcd5writeEccc>:
 2f6:	1f 93       	push	r17
 2f8:	cf 93       	push	r28
 2fa:	df 93       	push	r29
 2fc:	ec 01       	movw	r28, r24
 2fe:	12 2f       	mov	r17, r18
 300:	0e 94 4d 01 	call	0x29a	; 0x29a <_ZN3lcd10Lcd_CursorEcc>
 304:	40 e1       	ldi	r20, 0x10	; 16
 306:	61 2f       	mov	r22, r17
 308:	ce 01       	movw	r24, r28
 30a:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN3lcd11Lcd_RawSendEcc>
 30e:	df 91       	pop	r29
 310:	cf 91       	pop	r28
 312:	1f 91       	pop	r17
 314:	08 95       	ret

00000316 <_ZN3lcd15Lcd_PrintStringEPKcc>:
 316:	ef 92       	push	r14
 318:	ff 92       	push	r15
 31a:	0f 93       	push	r16
 31c:	1f 93       	push	r17
 31e:	cf 93       	push	r28
 320:	df 93       	push	r29
 322:	fb 01       	movw	r30, r22
 324:	44 23       	and	r20, r20
 326:	01 f1       	breq	.+64     	; 0x368 <_ZN3lcd15Lcd_PrintStringEPKcc+0x52>
 328:	60 81       	ld	r22, Z
 32a:	66 23       	and	r22, r22
 32c:	e9 f0       	breq	.+58     	; 0x368 <_ZN3lcd15Lcd_PrintStringEPKcc+0x52>
 32e:	dc 01       	movw	r26, r24
 330:	11 96       	adiw	r26, 0x01	; 1
 332:	2c 91       	ld	r18, X
 334:	22 23       	and	r18, r18
 336:	c1 f0       	breq	.+48     	; 0x368 <_ZN3lcd15Lcd_PrintStringEPKcc+0x52>
 338:	d4 2f       	mov	r29, r20
 33a:	8f 01       	movw	r16, r30
 33c:	7c 01       	movw	r14, r24
 33e:	0f 5f       	subi	r16, 0xFF	; 255
 340:	1f 4f       	sbci	r17, 0xFF	; 255
 342:	c0 e0       	ldi	r28, 0x00	; 0
 344:	0a c0       	rjmp	.+20     	; 0x35a <_ZN3lcd15Lcd_PrintStringEPKcc+0x44>
 346:	f8 01       	movw	r30, r16
 348:	61 91       	ld	r22, Z+
 34a:	8f 01       	movw	r16, r30
 34c:	66 23       	and	r22, r22
 34e:	61 f0       	breq	.+24     	; 0x368 <_ZN3lcd15Lcd_PrintStringEPKcc+0x52>
 350:	d7 01       	movw	r26, r14
 352:	11 96       	adiw	r26, 0x01	; 1
 354:	8c 91       	ld	r24, X
 356:	8c 17       	cp	r24, r28
 358:	39 f0       	breq	.+14     	; 0x368 <_ZN3lcd15Lcd_PrintStringEPKcc+0x52>
 35a:	40 e1       	ldi	r20, 0x10	; 16
 35c:	c7 01       	movw	r24, r14
 35e:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN3lcd11Lcd_RawSendEcc>
 362:	cf 5f       	subi	r28, 0xFF	; 255
 364:	cd 13       	cpse	r28, r29
 366:	ef cf       	rjmp	.-34     	; 0x346 <_ZN3lcd15Lcd_PrintStringEPKcc+0x30>
 368:	df 91       	pop	r29
 36a:	cf 91       	pop	r28
 36c:	1f 91       	pop	r17
 36e:	0f 91       	pop	r16
 370:	ff 90       	pop	r15
 372:	ef 90       	pop	r14
 374:	08 95       	ret

00000376 <_ZN3lcd9writeTextEccPKc>:
 376:	ef 92       	push	r14
 378:	ff 92       	push	r15
 37a:	0f 93       	push	r16
 37c:	1f 93       	push	r17
 37e:	cf 93       	push	r28
 380:	df 93       	push	r29
 382:	8c 01       	movw	r16, r24
 384:	79 01       	movw	r14, r18
 386:	fc 01       	movw	r30, r24
 388:	c1 81       	ldd	r28, Z+1	; 0x01
 38a:	d0 e0       	ldi	r29, 0x00	; 0
 38c:	c4 1b       	sub	r28, r20
 38e:	d1 09       	sbc	r29, r1
 390:	0e 94 4d 01 	call	0x29a	; 0x29a <_ZN3lcd10Lcd_CursorEcc>
 394:	4c 2f       	mov	r20, r28
 396:	b7 01       	movw	r22, r14
 398:	c8 01       	movw	r24, r16
 39a:	0e 94 8b 01 	call	0x316	; 0x316 <_ZN3lcd15Lcd_PrintStringEPKcc>
 39e:	df 91       	pop	r29
 3a0:	cf 91       	pop	r28
 3a2:	1f 91       	pop	r17
 3a4:	0f 91       	pop	r16
 3a6:	ff 90       	pop	r15
 3a8:	ef 90       	pop	r14
 3aa:	08 95       	ret

000003ac <_Z13readKeypad4X4v>:


uint8_t  readKeypad4X4 (void){
uint8_t keypadData = 255;
	
	keypadPort = 0x0F;
 3ac:	8f e0       	ldi	r24, 0x0F	; 15
 3ae:	85 bb       	out	0x15, r24	; 21
	keypadPortDirection  = 0xF0;
 3b0:	80 ef       	ldi	r24, 0xF0	; 240
 3b2:	84 bb       	out	0x14, r24	; 20
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3b4:	84 e1       	ldi	r24, 0x14	; 20
 3b6:	8a 95       	dec	r24
 3b8:	f1 f7       	brne	.-4      	; 0x3b6 <_Z13readKeypad4X4v+0xa>
	Delay_us(5);
	

	if (keypadRow0==0){
 3ba:	98 9b       	sbis	0x13, 0	; 19
 3bc:	08 c0       	rjmp	.+16     	; 0x3ce <_Z13readKeypad4X4v+0x22>
		keypadData = 0;
		goto _keypadColumn;
	}
	else{
		if(keypadRow1==0){
 3be:	99 9b       	sbis	0x13, 1	; 19
 3c0:	08 c0       	rjmp	.+16     	; 0x3d2 <_Z13readKeypad4X4v+0x26>
			keypadData = 4;
			goto _keypadColumn;
		}
		else{
			if(keypadRow2==0){
 3c2:	9a 9b       	sbis	0x13, 2	; 19
 3c4:	08 c0       	rjmp	.+16     	; 0x3d6 <_Z13readKeypad4X4v+0x2a>
				keypadData = 8;
				goto _keypadColumn;
			}
			else{
				if (keypadRow3==0){
 3c6:	9b 99       	sbic	0x13, 3	; 19
 3c8:	1c c0       	rjmp	.+56     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
					keypadData = 12;
 3ca:	8c e0       	ldi	r24, 0x0C	; 12
 3cc:	05 c0       	rjmp	.+10     	; 0x3d8 <_Z13readKeypad4X4v+0x2c>
	keypadPortDirection  = 0xF0;
	Delay_us(5);
	

	if (keypadRow0==0){
		keypadData = 0;
 3ce:	80 e0       	ldi	r24, 0x00	; 0
 3d0:	03 c0       	rjmp	.+6      	; 0x3d8 <_Z13readKeypad4X4v+0x2c>
		goto _keypadColumn;
	}
	else{
		if(keypadRow1==0){
			keypadData = 4;
 3d2:	84 e0       	ldi	r24, 0x04	; 4
 3d4:	01 c0       	rjmp	.+2      	; 0x3d8 <_Z13readKeypad4X4v+0x2c>
			goto _keypadColumn;
		}
		else{
			if(keypadRow2==0){
				keypadData = 8;
 3d6:	88 e0       	ldi	r24, 0x08	; 8
			}
		}
	}

	_keypadColumn:
	keypadPort = 0xF0;
 3d8:	90 ef       	ldi	r25, 0xF0	; 240
 3da:	95 bb       	out	0x15, r25	; 21
	keypadPortDirection  = 0x0F;
 3dc:	9f e0       	ldi	r25, 0x0F	; 15
 3de:	94 bb       	out	0x14, r25	; 20
 3e0:	94 e1       	ldi	r25, 0x14	; 20
 3e2:	9a 95       	dec	r25
 3e4:	f1 f7       	brne	.-4      	; 0x3e2 <_Z13readKeypad4X4v+0x36>
	Delay_us(5);

	if (keypadCol0==0){
 3e6:	9c 9b       	sbis	0x13, 4	; 19
 3e8:	0f c0       	rjmp	.+30     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
		keypadData = keypadData + 0;
		goto _keypadReturnKey;
	}
	else{
		if(keypadCol1==0){
 3ea:	9d 99       	sbic	0x13, 5	; 19
 3ec:	02 c0       	rjmp	.+4      	; 0x3f2 <_Z13readKeypad4X4v+0x46>
			keypadData = keypadData + 1;
 3ee:	8f 5f       	subi	r24, 0xFF	; 255
			goto _keypadReturnKey;
 3f0:	08 95       	ret
		}
		else{
			if( keypadCol2==0  ){
 3f2:	9e 99       	sbic	0x13, 6	; 19
 3f4:	02 c0       	rjmp	.+4      	; 0x3fa <_Z13readKeypad4X4v+0x4e>
				keypadData = keypadData + 2;
 3f6:	8e 5f       	subi	r24, 0xFE	; 254
				goto _keypadReturnKey;
 3f8:	08 95       	ret
			}
			else{
				if (keypadCol3==0){
 3fa:	9f 99       	sbic	0x13, 7	; 19
 3fc:	04 c0       	rjmp	.+8      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
					keypadData = keypadData + 3;
 3fe:	8d 5f       	subi	r24, 0xFD	; 253
					goto _keypadReturnKey;
 400:	08 95       	ret
					keypadData = 12;
					goto _keypadColumn;
				}
				else{
					//goto _keypadReturnKey;
					return 255;
 402:	8f ef       	ldi	r24, 0xFF	; 255
 404:	08 95       	ret
					keypadData = keypadData + 3;
					goto _keypadReturnKey;
				}
				else{
					//keypadData = 255;
					return 255;
 406:	8f ef       	ldi	r24, 0xFF	; 255

	_keypadReturnKey:

	return keypadData;

}
 408:	08 95       	ret

0000040a <main>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 40a:	2f eb       	ldi	r18, 0xBF	; 191
 40c:	84 ed       	ldi	r24, 0xD4	; 212
 40e:	91 e0       	ldi	r25, 0x01	; 1
 410:	21 50       	subi	r18, 0x01	; 1
 412:	80 40       	sbci	r24, 0x00	; 0
 414:	90 40       	sbci	r25, 0x00	; 0
 416:	e1 f7       	brne	.-8      	; 0x410 <main+0x6>
 418:	00 c0       	rjmp	.+0      	; 0x41a <main+0x10>
 41a:	00 00       	nop


int main(void)
{
	delay_ms(50);
	display.init();
 41c:	8c ec       	ldi	r24, 0xCC	; 204
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	0e 94 a9 00 	call	0x152	; 0x152 <_ZN3lcd4initEv>
	display.clear();
 424:	8c ec       	ldi	r24, 0xCC	; 204
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	0e 94 32 01 	call	0x264	; 0x264 <_ZN3lcd5clearEv>
	
	display.writeText(0, 0, "INITIALIZING...");
 42c:	22 e8       	ldi	r18, 0x82	; 130
 42e:	30 e0       	ldi	r19, 0x00	; 0
 430:	40 e0       	ldi	r20, 0x00	; 0
 432:	60 e0       	ldi	r22, 0x00	; 0
 434:	8c ec       	ldi	r24, 0xCC	; 204
 436:	90 e0       	ldi	r25, 0x00	; 0
 438:	0e 94 bb 01 	call	0x376	; 0x376 <_ZN3lcd9writeTextEccPKc>
	display.writeText(1, 0, "Please Wait");
 43c:	22 e9       	ldi	r18, 0x92	; 146
 43e:	30 e0       	ldi	r19, 0x00	; 0
 440:	40 e0       	ldi	r20, 0x00	; 0
 442:	61 e0       	ldi	r22, 0x01	; 1
 444:	8c ec       	ldi	r24, 0xCC	; 204
 446:	90 e0       	ldi	r25, 0x00	; 0
 448:	0e 94 bb 01 	call	0x376	; 0x376 <_ZN3lcd9writeTextEccPKc>
 44c:	2f e7       	ldi	r18, 0x7F	; 127
 44e:	8e ee       	ldi	r24, 0xEE	; 238
 450:	96 e3       	ldi	r25, 0x36	; 54
 452:	21 50       	subi	r18, 0x01	; 1
 454:	80 40       	sbci	r24, 0x00	; 0
 456:	90 40       	sbci	r25, 0x00	; 0
 458:	e1 f7       	brne	.-8      	; 0x452 <main+0x48>
 45a:	00 c0       	rjmp	.+0      	; 0x45c <main+0x52>
 45c:	00 00       	nop
	delay_ms(1500);
	display.clear();
 45e:	8c ec       	ldi	r24, 0xCC	; 204
 460:	90 e0       	ldi	r25, 0x00	; 0
 462:	0e 94 32 01 	call	0x264	; 0x264 <_ZN3lcd5clearEv>
	    display.writeText(0, 1, "KEYPAD TEST...");
	    
	    key = readKeypad4X4();
	    if (key != 255)
		{
		    press[0] = keyPadCode[key];
 466:	c6 eb       	ldi	r28, 0xB6	; 182
 468:	d0 e0       	ldi	r29, 0x00	; 0
	display.clear();
	
    /* Replace with your application code */
    while (1) 
    {
	    display.writeText(0, 1, "KEYPAD TEST...");
 46a:	2e e9       	ldi	r18, 0x9E	; 158
 46c:	30 e0       	ldi	r19, 0x00	; 0
 46e:	41 e0       	ldi	r20, 0x01	; 1
 470:	60 e0       	ldi	r22, 0x00	; 0
 472:	8c ec       	ldi	r24, 0xCC	; 204
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	0e 94 bb 01 	call	0x376	; 0x376 <_ZN3lcd9writeTextEccPKc>
	    
	    key = readKeypad4X4();
 47a:	0e 94 d6 01 	call	0x3ac	; 0x3ac <_Z13readKeypad4X4v>
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	90 93 cb 00 	sts	0x00CB, r25	; 0x8000cb <key+0x1>
 484:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <key>
	    if (key != 255)
 488:	8f 3f       	cpi	r24, 0xFF	; 255
 48a:	91 05       	cpc	r25, r1
 48c:	71 f3       	breq	.-36     	; 0x46a <__stack+0xb>
		{
		    press[0] = keyPadCode[key];
 48e:	fc 01       	movw	r30, r24
 490:	e0 5a       	subi	r30, 0xA0	; 160
 492:	ff 4f       	sbci	r31, 0xFF	; 255
 494:	80 81       	ld	r24, Z
 496:	88 83       	st	Y, r24
	
			    display.writeText(1, 0, "pressed:");
 498:	2d ea       	ldi	r18, 0xAD	; 173
 49a:	30 e0       	ldi	r19, 0x00	; 0
 49c:	40 e0       	ldi	r20, 0x00	; 0
 49e:	61 e0       	ldi	r22, 0x01	; 1
 4a0:	8c ec       	ldi	r24, 0xCC	; 204
 4a2:	90 e0       	ldi	r25, 0x00	; 0
 4a4:	0e 94 bb 01 	call	0x376	; 0x376 <_ZN3lcd9writeTextEccPKc>
			    display.write(1, 9, press[0]);
 4a8:	28 81       	ld	r18, Y
 4aa:	49 e0       	ldi	r20, 0x09	; 9
 4ac:	61 e0       	ldi	r22, 0x01	; 1
 4ae:	8c ec       	ldi	r24, 0xCC	; 204
 4b0:	90 e0       	ldi	r25, 0x00	; 0
 4b2:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <_ZN3lcd5writeEccc>
 4b6:	d9 cf       	rjmp	.-78     	; 0x46a <__stack+0xb>

000004b8 <_GLOBAL__sub_I__Z2Hij>:
				uint8_t LCD_COLCNT;
 };


lcd::lcd(char columnNum, char rowNum )
:LCD_ROWCNT (rowNum), LCD_COLCNT(columnNum)
 4b8:	ec ec       	ldi	r30, 0xCC	; 204
 4ba:	f0 e0       	ldi	r31, 0x00	; 0
 4bc:	82 e0       	ldi	r24, 0x02	; 2
 4be:	80 83       	st	Z, r24
 4c0:	80 e1       	ldi	r24, 0x10	; 16
 4c2:	81 83       	std	Z+1, r24	; 0x01
 4c4:	08 95       	ret

000004c6 <__tablejump2__>:
 4c6:	ee 0f       	add	r30, r30
 4c8:	ff 1f       	adc	r31, r31
 4ca:	05 90       	lpm	r0, Z+
 4cc:	f4 91       	lpm	r31, Z
 4ce:	e0 2d       	mov	r30, r0
 4d0:	09 94       	ijmp

000004d2 <_exit>:
 4d2:	f8 94       	cli

000004d4 <__stop_program>:
 4d4:	ff cf       	rjmp	.-2      	; 0x4d4 <__stop_program>
